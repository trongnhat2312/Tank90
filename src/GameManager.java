import java.awt.Graphics2D;
import java.util.ArrayList;
import java.util.Random;


public class GameManager {
	
	int[][] map ={
			{5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5},
			{5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5},
			{5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5},
			{5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,5,0,0,0,5,5,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5},
			{5,5,0,0,0,0,0,0,0,0,0,0,3,0,0,0,5,3,3,3,0,5,5,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5},
			{5,5,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,3,3,0,5,5,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,5,5},
			{5,5,0,0,0,1,1,1,0,0,0,0,3,3,3,3,3,3,3,0,0,5,5,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,5,5},
			{5,5,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,5,5},
			{5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5},
			{5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5},
			{5,5,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,3,2,3,2,0,0,0,5,5},
			{5,5,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,2,1,2,3,2,0,0,0,5,5},
			{5,5,0,0,0,3,2,0,0,0,3,3,3,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5},
			{5,5,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,3,2,1,1,2,0,0,0,5,5},
			{5,5,0,0,3,3,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5},
			{5,5,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,0,5,5},
			{5,5,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,5,5,5},
			{5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,5,5},
			{5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,2,0,5,5,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,5,5},
			{5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,2,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5},
			{5,5,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0,2,2,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5},
			{5,5,0,2,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5},
			{5,5,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5},
			{5,5,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5},
			{5,5,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5},
			{5,5,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5},
			{5,5,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5},
			{5,5,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5},
			{5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5},
			{5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5},
			
	};
	
	MyTank myTank;
	ArrayList<BossTank> arrBossTank = new ArrayList<BossTank>();
	ArrayList<Map> arrMap = new ArrayList<Map>();
	ArrayList<Bullet> arrMyBullet = new ArrayList<Bullet>();
	
	Random random = new Random();
	
	void initGame(){
		myTank = new MyTank(300, 535);
		for (int i = 0; i < 10; i++) {
			int x = random.nextInt(MyFrame.W_FRAME - 33);
			BossTank bossTank = new BossTank(x, 0);
			arrBossTank.add(bossTank);
		}
		
		for (int i = 0; i < 30; i++) {
			for (int j = 0; j < 40; j++) {
				int x = j*19;
				int y = i*19;
				int bit = map[i][j];
				Map map = new Map(x, y, bit);
				arrMap.add(map);
			}
		}
	}
	
	void draw(Graphics2D g2d){
		myTank.draw(g2d);
		for (int i = 0; i < arrBossTank.size(); i++) {
			arrBossTank.get(i).draw(g2d);
		}
		for (int i = 0; i < arrMap.size(); i++) {
			arrMap.get(i).draw(g2d);
		}
		for (int i = 0; i < arrMyBullet.size(); i++) {
			arrMyBullet.get(i).draw(g2d);
		}
	}
	
	void move(int newOrient){
		myTank.changeOrient(newOrient);
		myTank.move(arrMap);
	} 
	
	void myTankFire(){
		Bullet bullet = myTank.fire();
		if (bullet != null) {
			arrMyBullet.add(bullet);
		}
	}
	
	void AI(){
		for (int i = 0; i < arrBossTank.size(); i++) {
			arrBossTank.get(i).createOrient();
			arrBossTank.get(i).move(arrMap);
		}
		for (int i = arrMyBullet.size() - 1; i >=0; i--) {
			boolean check = arrMyBullet.get(i).move(arrMap);
			if (check == false) {
				arrMyBullet.remove(i);
			}
		}
	}
}
             